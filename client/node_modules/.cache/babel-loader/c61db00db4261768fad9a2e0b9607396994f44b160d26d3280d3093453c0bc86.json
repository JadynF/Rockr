{"ast":null,"code":"var _jsxFileName = \"/Users/luksi/Rockrepo/Rockr/client/src/pages/IndividualChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport SideMenu from '../components/SideMenu';\nimport { Authorization } from '../components/Authorization';\nimport \"../styles/IndividualChat.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function IndividualChat() {\n  _s();\n  const [isMenuVisible, setIsMenuVisible] = useState(false);\n  const toggleMenu = () => {\n    setIsMenuVisible(prev => !prev);\n  };\n  const menuNames = ['Home', 'Chat', 'Profile', 'My Listings', 'Settings'];\n  const menuLinks = ['/Home', '/Chat', '/Profile', '/Listings', '/Settings'];\n  const {\n    userId,\n    listingId\n  } = useParams();\n  const [myId, setMyId] = useState(null);\n  const [listingName, setListingName] = useState(null);\n  const [messages, setMessages] = useState([[]]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const intervalRef = useRef(null);\n  const updateChat = () => {\n    Authorization();\n    const myToken = localStorage.getItem('token');\n    let body = {\n      token: myToken,\n      userId: userId,\n      listingId: listingId\n    };\n    fetch(\"http://localhost:8000/getIndividualChat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n      setMyId(data[0]);\n      setListingName(data[1]);\n      try {\n        setMessages(data[2]);\n        console.log(data[2][0].userId);\n      } catch {\n        console.log(\"no messages\");\n      }\n    });\n  };\n  useEffect(() => {\n    updateChat();\n    intervalRef.current = setInterval(updateChat, 5000);\n    return () => clearInterval(intervalRef.current);\n  }, []);\n  const sendMessage = () => {\n    console.log(inputMessage);\n    let body = {\n      myId: myId,\n      recvName: userId,\n      message: inputMessage,\n      listingId: listingId\n    };\n    fetch(\"http://localhost:8000/sendMessage\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    setInputMessage(\"\");\n    updateChat();\n  };\n  const handleInput = event => {\n    setInputMessage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isMenuVisible: isMenuVisible,\n      toggleMenu: toggleMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(SideMenu, {\n        isMenuVisible: isMenuVisible,\n        menuNames: menuNames,\n        menuLinks: menuLinks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [listingName, \" by \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), messages.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: item.userId == myId ? \"sent-message\" : \"received-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"chat-user\",\n            children: item.userId == myId ? \"Me:\" : userId + \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-message\",\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-message-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"new-message\",\n            type: \"text\",\n            value: inputMessage,\n            onChange: handleInput,\n            placeholder: \"Write your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"send-message-btn\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(IndividualChat, \"jiOFXGyo4Jm76X+kpSO5RDO2NLw=\", false, function () {\n  return [useParams];\n});\n_c = IndividualChat;\nvar _c;\n$RefreshReg$(_c, \"IndividualChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","useNavigate","Header","SideMenu","Authorization","jsxDEV","_jsxDEV","Fragment","_Fragment","IndividualChat","_s","isMenuVisible","setIsMenuVisible","toggleMenu","prev","menuNames","menuLinks","userId","listingId","myId","setMyId","listingName","setListingName","messages","setMessages","inputMessage","setInputMessage","intervalRef","updateChat","myToken","localStorage","getItem","body","token","fetch","method","headers","JSON","stringify","then","res","json","data","console","log","current","setInterval","clearInterval","sendMessage","recvName","message","handleInput","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","text","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/luksi/Rockrepo/Rockr/client/src/pages/IndividualChat.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport SideMenu from '../components/SideMenu';\nimport { Authorization } from '../components/Authorization';\nimport \"../styles/IndividualChat.css\";\n\nexport default function IndividualChat() {\n\n    const [isMenuVisible, setIsMenuVisible] = useState(false);\n    const toggleMenu = () => {\n        setIsMenuVisible(prev => !prev);\n    }\n    const menuNames = ['Home', 'Chat', 'Profile', 'My Listings', 'Settings'];\n    const menuLinks = ['/Home', '/Chat', '/Profile', '/Listings', '/Settings'];\n\n    const { userId, listingId } = useParams();\n\n    const [myId, setMyId] = useState(null);\n    const [listingName, setListingName] = useState(null);\n    const [messages, setMessages] = useState([[]]);\n    const [inputMessage, setInputMessage] = useState(\"\");\n\n    const intervalRef = useRef(null);\n\n    const updateChat = () => {\n        Authorization();\n\n        const myToken = localStorage.getItem('token');\n        let body = {\n            token: myToken,\n            userId: userId,\n            listingId: listingId\n        } \n        fetch(\"http://localhost:8000/getIndividualChat\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        })\n        .then(res => res.json())\n        .then(data => {\n            setMyId(data[0]);\n            setListingName(data[1]);\n            try {\n                setMessages(data[2]);\n                console.log(data[2][0].userId)\n            }\n            catch {\n                console.log(\"no messages\");\n            }\n        });\n    }\n\n    useEffect(() => {\n        updateChat();\n        intervalRef.current = setInterval(updateChat, 5000);\n        \n        return () => clearInterval(intervalRef.current);\n    }, []);\n\n    const sendMessage = () => {\n        console.log(inputMessage);\n        let body = {\n            myId: myId,\n            recvName: userId,\n            message: inputMessage,\n            listingId: listingId\n        }\n        fetch(\"http://localhost:8000/sendMessage\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        });\n        setInputMessage(\"\");\n        updateChat();\n    }\n\n    const handleInput = (event) => {\n        setInputMessage(event.target.value);\n    }\n\n\n    return (\n        <>\n            <Header isMenuVisible = {isMenuVisible} toggleMenu = {toggleMenu}/>\n            <div className = \"main-container\">\n                <SideMenu isMenuVisible = {isMenuVisible} menuNames = {menuNames} menuLinks = {menuLinks}/>\n                <div className = 'main-area'>\n                    <div className = \"chat-title\">\n                        <h1>{listingName} by {userId}</h1>\n                    </div>\n                    {messages.map(item => (\n                        <div className = {item.userId == myId ? \"sent-message\" : \"received-message\"}>\n                            <h2 className = \"chat-user\">{item.userId == myId ? \"Me:\" : userId + \":\"}</h2>\n                            <p className = \"chat-message\">{item.text}</p>\n                        </div>\n                    ))}\n                    <div className = 'create-message-div'>\n                        <input className = \"new-message\" type=\"text\" value = {inputMessage} onChange = {handleInput} placeholder=\"Write your message\"></input>\n                        <h1 className = \"send-message-btn\" onClick={sendMessage}>Send</h1>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}