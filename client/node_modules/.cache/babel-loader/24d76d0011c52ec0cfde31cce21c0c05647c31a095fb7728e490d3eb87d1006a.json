{"ast":null,"code":"var _jsxFileName = \"/Users/luksi/Rockrepo/Rockr/client/src/components/AllChats.js\",\n  _s = $RefreshSig$();\nimport { Authorization } from './Authorization';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllChats({\n  navigate\n}) {\n  _s();\n  const [outgoingChats, setOutgoingChats] = useState([]);\n  const [incomingChats, setIncomingChats] = useState([]);\n\n  // need to query database to get chat information\n  useEffect(() => {\n    Authorization();\n    const myToken = localStorage.getItem('token');\n    let body = {\n      token: myToken\n    };\n    fetch('http://localhost:8000/getChatOverviews', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    }).then(res => res.json()).then(data => {\n      setOutgoingChats(data[0]);\n      setIncomingChats(data[1]);\n    }); // set useState variables)\n  }, []);\n  const goToChat = (userId, listingId) => {\n    navigate(`/IndividualChat/${userId}/${listingId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outgoing-chats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Outgoing Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), outgoingChats.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-chat\",\n        onClick: () => goToChat(item.username, item.listingId),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-titles\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.listingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-message\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"incoming-chats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Incoming Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), incomingChats.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-chat\",\n        onClick: () => goToChat(item.username, item.listingId),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-titles\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.listingName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"last-message\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(AllChats, \"wQzdgZcN2+UXwp57tRMqK98wvi8=\");\n_c = AllChats;\nexport default AllChats;\nvar _c;\n$RefreshReg$(_c, \"AllChats\");","map":{"version":3,"names":["Authorization","React","useState","useEffect","jsxDEV","_jsxDEV","AllChats","navigate","_s","outgoingChats","setOutgoingChats","incomingChats","setIncomingChats","myToken","localStorage","getItem","body","token","fetch","method","headers","JSON","stringify","then","res","json","data","goToChat","userId","listingId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","username","listingName","_c","$RefreshReg$"],"sources":["/Users/luksi/Rockrepo/Rockr/client/src/components/AllChats.js"],"sourcesContent":["import {Authorization} from './Authorization';\nimport React, {useState, useEffect} from 'react';\n\nfunction AllChats({ navigate }) {\n    const [outgoingChats, setOutgoingChats] = useState([]);\n    const [incomingChats, setIncomingChats] = useState([]);\n\n    // need to query database to get chat information\n    useEffect(() => {\n        Authorization();\n\n        const myToken = localStorage.getItem('token');\n        let body = {\n            token: myToken\n        }\n        fetch('http://localhost:8000/getChatOverviews', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body),\n        })\n        .then(res => res.json())\n        .then(data => {\n            setOutgoingChats(data[0]);\n            setIncomingChats(data[1]);\n        });// set useState variables)\n    }, []);\n\n    const goToChat = (userId, listingId) => {\n        navigate(`/IndividualChat/${userId}/${listingId}`);\n    };\n\n\n    return (\n        <div className = 'all-chats'>\n            <div className = 'outgoing-chats'>\n                <h2>Outgoing Chats</h2>\n                {outgoingChats.map((item, index) => (\n                    <div className = 'individual-chat' onClick={() => goToChat(item.username, item.listingId)}>\n                        <div className = 'chat-titles'>\n                            <h2>{item.listingName}</h2>\n                            <h3>{item.username}</h3>\n                        </div>\n                        <div className = 'last-message'>\n                            <h4></h4>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <hr></hr>\n            <div className = 'incoming-chats'>\n                <h2>Incoming Chats</h2>\n                {incomingChats.map((item, index) => (\n                    <div className = 'individual-chat' onClick={() => goToChat(item.username, item.listingId)}>\n                        <div className = 'chat-titles'>\n                            <h2>{item.listingName}</h2>\n                            <h3>{item.username}</h3>\n                        </div>\n                        <div className = 'last-message'>\n                            <h4></h4>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default AllChats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}